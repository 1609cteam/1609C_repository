git 特点：高端大气上档次
git 是目前世界上最先进的分布式版本控制系统（没有之一）
官方注册账号：https://github.com

国内常用的  码云

第一次启动git：
	配置用户名： git  config  --global  user.name "用户名"
	配置邮箱： git  config  --global  user.email "邮箱账号"

在适当的地方，创建一个空文件夹（最好是桌面）
cd 进入该文件夹
用  git init  将这个文件夹变成git的管理库 （不能更改自动生成的文本）
在文件夹中创建一个  sunck.txt 文本
使用  git add sunck.txt 添加到暂存区仓库
使用  git commit  -m  "注释信息"  提交到仓库
git status 命令 可以时刻掌握仓库的当前状态  
git diff   命令  可以查看修改的内容
git log    命令  可以查已经看显示最近到最远对的提交日志
git log --prett=oneline  历史分行显示 
git  reset --hard HEAD^   回退到上个版本
git  reset --hard HEAD^^   回退到上上个版本
git  reset --hard HEAD~100   回退到上100个版本
git  reset --hard 具体版本号  (5到8个号码就行)
git  reflog  命令记录每一次的命令

git  checkout  -- （fileName）  命令如果该文件已经添加到暂存区后有进行了修改，现在，撤销修改就会回到添加暂存区后的状态

在黑屏终端输入 ssh-keygen -t rsa -C "自己在git官网注册的邮箱"
输入完之后 4 次回车
找到 Enter file in which to save the key (/c/Users/lenovo/.ssh/id_rsa):

cd 进入/c/Users/lenovo/.ssh
ls查看会显示  id_rsa(私钥)   id_rsa.pub（公钥）
用 cat id_rsa.pub  查看key值并复制

进入github官网
在页面右上角找到 
	-> 设置 
	-> 在左侧找到 SSH and GPG keys(SSH和GPG密钥) 
	-> 在页面中找到 New SSH key（新的SSH密钥） 
	-> （title）标题（自定义标题名） 
	-> key(键) 将提前复制好的公钥粘贴到key下的文本框中
	-> Add SSH key(添加SSH密钥)
	-> 就完成添加密钥了 别人想往git上传代码必须有这个公钥，否则别人不能上传
	-> 在git终端  输入： ssh -T git@github.com  来测试是否连接上
创建远程仓库： 
	点击猫的图表回到首页：
	-> 找到 Start a project（启动项目）
	-> 找到 Repository name（存储库名称）输入一个自定义的库名
	-> 勾选 Inittialize this repositiry an existing repository（使用自述文件初始化此存储库）
	-> Create repository（创建存储库）
	-> 远程仓库和本地仓库没有关联（用电脑去关联远程仓库地址）
	-> 在页面中找到 Clone or download（克隆或下载）
	-> 选择Clone with SSH（用SSH克隆）
	-> 复制文本框中的内容 比如："git@github.com:rzmxs/sunck.git"
	-> 在git终端输入： git remote add origin git@github.com:rzmxs/sunck.git
不想关联远程仓库: git remote rm origin
将本地内容推送到远程仓库：
	-> 先将远程仓库的内容 拉到本地 git pull origin master --allow-unrelated-histories
	-> 上推内容  git push origin master
 git push --set-upstream origin 分支名

在本地没有本地库的时候需要将远程库克隆到本地  git clone git@github.com:rzmxs/sunck.git

在master本地文件夹中创建一个 .gitignore
	touch .gitignore
	将不想提交到远程库的文件/目录名写在.gitignore文件中就可以做到不提交

创建分支： git branch  分支名
切换分支： git checkout  分支名
创建同时切换： git checkout -b 分支名
查看当前分支： git branch   （会列出所有的分支，在当前的分支前会有一个*号）
合并分支： 
	先进入到需要合并的地址 （master）
	在输入 git merge 分支名（dev）
删除分支： git branch -d 分支名
删除远程分支： 
	-> git push origin :分支名
	-> git push origin --delete 分支名
在远程库中创建分支： git push --set-upstream origin xxx（分支名）
